name: CI Pipeline

on:
  pull_request:
    branches:
      - develop
      - main
  push:
    branches:
      - develop
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Grant execute permission to gradlew
        run: chmod +x gradlew

      - name: Init gradle wrapper
        run: gradle wrapper

      - name: Build and test with Gradle
        run: ./gradlew build

      - name: Generate JaCoCo report
        run: ./gradlew jacocoTestReport

      - name: Validate test coverage
        run: |
          # Instala o jq para processar o XML
          sudo apt-get install -y jq

          # Extrai a cobertura total do relatório XML
          COVERAGE=$(xmllint --xpath "string(//report/counter[@type='LINE']/@missed)" build/reports/jacoco/test/jacocoTestReport.xml)
          TOTAL=$(xmllint --xpath "string(//report/counter[@type='LINE']/@covered)" build/reports/jacoco/test/jacocoTestReport.xml)
          COVERAGE_PERCENT=$(echo "scale=2; $TOTAL / ($TOTAL + $COVERAGE) * 100" | bc)

          echo "Cobertura de testes: $COVERAGE_PERCENT%"

          # Define a cobertura mínima exigida
          MIN_COVERAGE=80

          if (( $(echo "$COVERAGE_PERCENT < $MIN_COVERAGE" | bc -l) )); then
            echo "Cobertura de testes abaixo do mínimo exigido ($MIN_COVERAGE%)."
            exit 1
          else
            echo "Cobertura de testes acima do mínimo exigido ($MIN_COVERAGE%)."
          fi
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: build/reports/jacoco/test/jacocoTestReport.xml